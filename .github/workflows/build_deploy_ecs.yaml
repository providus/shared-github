name: Build and Deploy on AWS ECS (Reusable - Multi App)

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      ecr_repo:
        required: true
        type: string
      tf_dir:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ inputs.aws_region }}
      ECR_REPO: ${{ inputs.ecr_repo }}
      TF_DIR: ${{ inputs.tf_dir }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get AWS Account ID
        id: account
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo "AWS_ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

      - name: Detect Changed Apps
        id: detect
        run: |
          CHANGED_APPS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^src/apps/' | cut -d'/' -f3 | sort -u)
          echo "Detected apps: $CHANGED_APPS"
          echo "apps<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_APPS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build, Push, and Update Task Definitions
        run: |
          echo "Raw app list:"
          echo "${{ steps.detect.outputs.apps }}"

          echo "Parsing and processing apps..."

          while IFS= read -r APP; do
            echo "\nðŸ”§ Processing $APP"
            IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}"

            echo "Building and pushing image for $APP..."
            docker build -t $IMAGE_URI:latest -t $IMAGE_URI:${GITHUB_SHA}-$APP src/apps/$APP
            docker push $IMAGE_URI:latest
            docker push $IMAGE_URI:${GITHUB_SHA}-$APP

            echo "Updating task definition for $APP..."
            TASK_DEF_FILE="$TF_DIR/environments/dev/${APP}-task-definition.json"
            OLD_IMAGE=$(jq -r '.containerDefinitions[0].image' "$TASK_DEF_FILE")
            jq --arg IMAGE "$IMAGE_URI:${GITHUB_SHA}-$APP" '.containerDefinitions[0].image = $IMAGE' "$TASK_DEF_FILE" > tmp.json && mv tmp.json "$TASK_DEF_FILE"

            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add "$TASK_DEF_FILE"
            git commit -m "Update $APP task definition to $GITHUB_SHA-$APP" || echo "No changes to commit"
          done <<< "${{ steps.detect.outputs.apps }}"

          git push

      - name: Summary
        run: |
          echo "### âœ… All detected apps built and deployed" >> $GITHUB_STEP_SUMMARY

          IFS=$'\n' read -r -a apps <<< "${{ steps.detect.outputs.apps }}"
          for APP in "${apps[@]}"; do
            echo "- $APP" >> $GITHUB_STEP_SUMMARY
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ”— Check the Terraform apply job here: [deploy_infra.yaml workflow](https://github.com/SkyHighGrowth/ai-pov/actions/workflows/deploy_infra.yaml)" >> $GITHUB_STEP_SUMMARY
